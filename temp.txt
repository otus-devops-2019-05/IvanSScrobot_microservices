1. build docker image inside gitlab runner

register a runner properly:

sudo  docker exec -it gitlab-runner gitlab-runner register -n \
  --url http://104.198.248.218/ \
  --registration-token e8pyXzxMY8XTDxYZ5eDz\
  --executor docker \
  --description "Runner" \
  --docker-image "alpine:latest" \
  --docker-volumes /var/run/docker.sock:/var/run/docker.sock  \
  --run-untagged \
  --locked=false

check variables:

$ echo 'CI_SERVER_HOST- '$CI_SERVER_HOST
CI_SERVER_HOST- 104.198.248.218
$ echo 'CI_COMMIT_REF_NAME- '$CI_COMMIT_REF_NAME
CI_COMMIT_REF_NAME- gitlab-ci-1
$ echo 'CI_PIPELINE_IID - '$CI_PIPELINE_IID
CI_PIPELINE_IID - 20

docs: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html



================
2. autoscaling

https://webnugget.de/autoscaling-gitlab-ci-builds-on-preemptible-google-cloud-instances-2/

1) install docker-machine

https://docs.docker.com/machine/install-machine/


https://docs.docker.com/machine/install-machine/https://docs.docker.com/machine/install-machine/
base=https://github.com/docker/machine/releases/download/v0.16.0 &&
  curl -L $base/docker-machine-$(uname -s)-$(uname -m) >/tmp/docker-machine &&
  sudo mv /tmp/docker-machine /usr/local/bin/docker-machine


https://docs.docker.com/machine/drivers/gce/

export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gce-credentials.json

2)install GCE
gcloud auth login

Optional - https://docs.gitlab.com/runner/executors/docker_machine.html#preparing-the-environment

3)register gitlab-runner for autoscaling 
 sudo  docker exec -it gitlab-runner gitlab-runner register -n \
  --url http://104.198.248.218/ \
  --registration-token e8pyXzxMY8XTDxYZ5eDz\
  --executor docker+machine \
  --description "runner2" \
  --docker-image "alpine:latest" \
  --run-untagged \
  --locked=false 

  4)Configure the runner
  /srv/gitlab-runner/config.toml or /home/ivan/.gitlab-runner/config.toml  


concurrent = 5
check_interval = 0

[session_server]
  session_timeout = 1800

[[runners]]
  name = "runner2"
  url = "http://104.198.248.218/"
  token = "Js-XFh_VyzvrJTPx9Gi9"
  executor = "docker+machine"
  [runners.custom_build_dir]
  [runners.docker]
    tls_verify = false
    image = "alpine:latest"
    privileged = false
    disable_entrypoint_overwrite = false
    oom_kill_disable = false
    disable_cache = false
    volumes = ["/cache"]
    shm_size = 0
  [runners.cache]
    [runners.cache.s3]
    [runners.cache.gcs]
 [runners.machine]
    IdleCount = 0
    IdleTime = 600
    MachineDriver = "google"
    MachineName = "auto-scale-runner-%s"
    MachineOptions = [
      "google-project=docker-is",
      "google-machine-type=f1-micro",
      "google-tags=gitlab-ci-slave",
      "google-preemptible=true",
      "google-zone=europe-west1-c",
      "google-use-internal-ip=true",
      "google-machine-image=coreos-cloud/global/images/family/coreos-stable"
    ]


3. Auto deploying runners

Terraform  + ansible roles
https://github.com/riemers/ansible-gitlab-runner

ansible-galaxy install --roles-path . riemers.gitlab-runner 

ansible-inventory -i inventory.compute.gcp.yml --graph
ansible-playbook gitlab-runner.yml -i inventory.compute.gcp.yml


4. Slack integration

https://docs.gitlab.com/ee/user/project/integrations/slack.html

https://app.slack.com/client/T6HR0TUP3/CKP31NMN3